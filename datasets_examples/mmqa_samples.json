[{"id_": 0, "Question": "Which department currently headed by a temporary acting manager has the largest number of employees, and how many employees does it have?", "SQL": "SELECT d.Name, SUM(d.Num_Employees) FROM department d JOIN management m ON d.Department_ID = m.department_ID WHERE m.temporary_acting = 'Yes' GROUP BY d.Name ORDER BY SUM(d.Num_Employees) DESC LIMIT 1;", "table_names": ["department", "management"], "tables": [{"table_columns": ["Department_ID", "Name", "Creation", "Ranking", "Budget_in_Billions", "Num_Employees"], "table_content": [[1, "State", "1789", 1, 9.96, 30266.0], [2, "Treasury", "1789", 2, 11.1, 115897.0], [3, "Defense", "1947", 3, 439.3, 3000000.0], [4, "Justice", "1870", 4, 23.4, 112557.0], [5, "Interior", "1849", 5, 10.7, 71436.0], [6, "Agriculture", "1889", 6, 77.6, 109832.0], [7, "Commerce", "1903", 7, 6.2, 36000.0], [8, "Labor", "1913", 8, 59.7, 17347.0], [9, "Health and Human Services", "1953", 9, 543.2, 67000.0], [10, "Housing and Urban Development", "1965", 10, 46.2, 10600.0], [11, "Transportation", "1966", 11, 58.0, 58622.0], [12, "Energy", "1977", 12, 21.5, 116100.0], [13, "Education", "1979", 13, 62.8, 4487.0], [14, "Veterans Affairs", "1989", 14, 73.2, 235000.0], [15, "Homeland Security", "2002", 15, 44.6, 208000.0]]}, {"table_columns": ["department_ID", "head_ID", "temporary_acting"], "table_content": [[2, 5, "Yes"], [15, 4, "Yes"], [2, 6, "Yes"], [7, 3, "No"], [11, 10, "No"]]}], "foreign_keys": ["head id", "department id"], "primary_keys": ["department id", "head id", "department id"], "answer": "Treasury, 115897"}, {"id_": 1, "Question": "What are the names and budgets of departments ranked in the top 10 whose current managerial positions are temporarily acting?", "SQL": "SELECT d.Name, d.Budget_in_Billions FROM department d JOIN management m ON d.Department_ID = m.department_ID WHERE d.Ranking < 10 AND m.temporary_acting = 'Yes';", "table_names": ["department", "management"], "tables": [{"table_columns": ["Department_ID", "Name", "Creation", "Ranking", "Budget_in_Billions", "Num_Employees"], "table_content": [[1, "State", "1789", 1, 9.96, 30266.0], [2, "Treasury", "1789", 2, 11.1, 115897.0], [3, "Defense", "1947", 3, 439.3, 3000000.0], [4, "Justice", "1870", 4, 23.4, 112557.0], [5, "Interior", "1849", 5, 10.7, 71436.0], [6, "Agriculture", "1889", 6, 77.6, 109832.0], [7, "Commerce", "1903", 7, 6.2, 36000.0], [8, "Labor", "1913", 8, 59.7, 17347.0], [9, "Health and Human Services", "1953", 9, 543.2, 67000.0], [10, "Housing and Urban Development", "1965", 10, 46.2, 10600.0], [11, "Transportation", "1966", 11, 58.0, 58622.0], [12, "Energy", "1977", 12, 21.5, 116100.0], [13, "Education", "1979", 13, 62.8, 4487.0], [14, "Veterans Affairs", "1989", 14, 73.2, 235000.0], [15, "Homeland Security", "2002", 15, 44.6, 208000.0]]}, {"table_columns": ["department_ID", "head_ID", "temporary_acting"], "table_content": [[2, 5, "Yes"], [15, 4, "Yes"], [2, 6, "Yes"], [7, 3, "No"], [11, 10, "No"]]}], "foreign_keys": ["head id", "department id"], "primary_keys": ["department id", "head id", "department id"], "answer": "Treasury, 11.1"}, {"id_": 2, "Question": "What is the average age of department heads who are serving as temporary acting heads and were born in California?", "SQL": "SELECT AVG(h.age) FROM head h JOIN management m ON h.head_ID = m.head_ID WHERE m.temporary_acting = 'Yes' AND h.born_state = 'California';", "table_names": ["head", "management"], "tables": [{"table_columns": ["head_ID", "name", "born_state", "age"], "table_content": [[1, "Tiger Woods", "Alabama", 67.0], [2, "Sergio Garc\u00c3\u00ada", "California", 68.0], [3, "K. J. Choi", "Alabama", 69.0], [4, "Dudley Hart", "California", 52.0], [5, "Jeff Maggert", "Delaware", 53.0], [6, "Billy Mayfair", "California", 69.0], [7, "Stewart Cink", "Florida", 50.0], [8, "Nick Faldo", "California", 56.0], [9, "P\u00c3\u00a1draig Harrington", "Connecticut", 43.0], [10, "Franklin Langham", "Connecticut", 67.0]]}, {"table_columns": ["department_ID", "head_ID", "temporary_acting"], "table_content": [[2, 5, "Yes"], [15, 4, "Yes"], [2, 6, "Yes"], [7, 3, "No"], [11, 10, "No"]]}], "foreign_keys": ["head id", "department id"], "primary_keys": ["department id", "head id", "department id"], "answer": "63.0"}, {"id_": 3, "Question": "Which department with temporary acting management has the highest budget?", "SQL": "SELECT d.Name FROM department d JOIN management m ON d.Department_ID = m.department_ID WHERE m.temporary_acting = 'Yes' ORDER BY d.Budget_in_Billions DESC LIMIT 1;", "table_names": ["department", "management"], "tables": [{"table_columns": ["Department_ID", "Name", "Creation", "Ranking", "Budget_in_Billions", "Num_Employees"], "table_content": [[1, "State", "1789", 1, 9.96, 30266.0], [2, "Treasury", "1789", 2, 11.1, 115897.0], [3, "Defense", "1947", 3, 439.3, 3000000.0], [4, "Justice", "1870", 4, 23.4, 112557.0], [5, "Interior", "1849", 5, 10.7, 71436.0], [6, "Agriculture", "1889", 6, 77.6, 109832.0], [7, "Commerce", "1903", 7, 6.2, 36000.0], [8, "Labor", "1913", 8, 59.7, 17347.0], [9, "Health and Human Services", "1953", 9, 543.2, 67000.0], [10, "Housing and Urban Development", "1965", 10, 46.2, 10600.0], [11, "Transportation", "1966", 11, 58.0, 58622.0], [12, "Energy", "1977", 12, 21.5, 116100.0], [13, "Education", "1979", 13, 62.8, 4487.0], [14, "Veterans Affairs", "1989", 14, 73.2, 235000.0], [15, "Homeland Security", "2002", 15, 44.6, 208000.0]]}, {"table_columns": ["department_ID", "head_ID", "temporary_acting"], "table_content": [[2, 5, "Yes"], [15, 4, "Yes"], [2, 6, "Yes"], [7, 3, "No"], [11, 10, "No"]]}], "foreign_keys": ["head id", "department id"], "primary_keys": ["department id", "head id", "department id"], "answer": "Treasury"}, {"id_": 4, "Question": "What are the names of cities or villages with populations below 2000 that hosted farm competitions between the years 2002 and 2005?", "SQL": "SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE city.Population < 2000 AND farm_competition.Year BETWEEN 2002 AND 2005;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Plaster Rock, Drummond, Aroostook"}, {"id_": 5, "Question": "Which city with a population greater than 1000 hosted the earliest farm competition?", "SQL": "SELECT c.Official_Name FROM city c JOIN farm_competition f ON c.City_ID = f.Host_city_ID WHERE f.Year = (SELECT MIN(Year) FROM farm_competition WHERE Host_city_ID IN (SELECT City_ID FROM city WHERE Population > 1000));", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Plaster Rock"}, {"id_": 6, "Question": "Which city with an area smaller than 10 square kilometers hosted the most recent farm competition after 2003, and had the highest population among such cities?", "SQL": "SELECT city.Official_Name FROM city INNER JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE farm_competition.Year > 2003 AND city.Area_km_2 < 10 ORDER BY city.Population DESC LIMIT 1;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Perth-Andover"}, {"id_": 7, "Question": "What are the names of the cities which hosted farm competitions after 2005 and have an area larger than 5 km\u00b2?", "SQL": "SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE city.Area_km_2 > 5 AND farm_competition.Year > 2005;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Grand Falls/Grand-Sault, Perth-Andover, Drummond"}, {"id_": 8, "Question": "Which city has hosted the highest number of farm competitions, and how many have they hosted?", "SQL": "SELECT city.Official_Name, COUNT(farm_competition.Competition_ID) AS Num_Hosted FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID GROUP BY city.Official_Name ORDER BY Num_Hosted DESC LIMIT 1;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Aroostook, 2"}, {"id_": 9, "Question": "What is the official name of the city that hosted the farm competition themed 'MTV Cube' in 2003?", "SQL": "SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE farm_competition.Year = 2003;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Aroostook"}, {"id_": 10, "Question": "Which city hosted the farm competition in 2002 and has a population less than 500?", "SQL": "SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE farm_competition.Year = 2002 AND city.Population < 500;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Aroostook"}, {"id_": 11, "Question": "What is the Official Name of the city that hosted the farm competition with the theme 'MTV Cube'?", "SQL": "SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE farm_competition.Year = 2003;", "table_names": ["city", "farm_competition"], "tables": [{"table_columns": ["City_ID", "Official_Name", "Status", "Area_km_2", "Population", "Census_Ranking"], "table_content": [[1, "Grand Falls/Grand-Sault", "Town", 18.06, 5706.0, "636 of 5008"], [2, "Perth-Andover", "Village", 8.89, 1778.0, "1442 of 5,008"], [3, "Plaster Rock", "Village", 3.09, 1135.0, "1936 of 5,008"], [4, "Drummond", "Village", 8.91, 775.0, "2418 of 5008"], [5, "Aroostook", "Village", 2.24, 351.0, "3460 of 5008"]]}, {"table_columns": ["Competition_ID", "Year", "Theme", "Host_city_ID", "Hosts"], "table_content": [[1, 2013, "Carnival M is back!", 1, "Miley Cyrus Jared Leto and Karen Mok"], [2, 2006, "Codehunters", 2, "Leehom Wang and Kelly Rowland"], [3, 2005, "MTV Asia Aid", 3, "Alicia Keys"], [4, 2004, "Valentine's Day", 4, "Vanness Wu and Michelle Branch"], [5, 2003, "MTV Cube", 5, "Shaggy and Coco Lee"], [6, 2002, "Aliens", 5, "Mandy Moore and Ronan Keating"]]}], "foreign_keys": ["host city id", "farm id", "competition id"], "primary_keys": ["city id", "farm id", "competition id", "competition id"], "answer": "Aroostook"}, {"id_": 12, "Question": "What are the names of courses that have more than two unique students registered?", "SQL": "SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Course_Registrations GROUP BY course_id HAVING COUNT(DISTINCT student_id) > 2);", "table_names": ["Courses", "Student_Course_Registrations"], "tables": [{"table_columns": ["course_id", "course_name", "course_description", "other_details"], "table_content": [["301", "statistics", "statistics", null], ["302", "English", "English", null], ["303", "French", "French", null], ["304", "database", "database", null], ["305", "data structure", "data structure", null], ["306", "Art history", "Art history", null]]}, {"table_columns": ["student_id", "course_id", "registration_date"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2008-10-04 10:35:13"], [121, 303, "2008-11-14 10:35:13"], [131, 303, "2008-11-05 10:35:13"], [141, 302, "2008-11-06 10:35:13"], [151, 305, "2008-11-07 10:35:13"], [161, 302, "2008-11-07 10:35:13"], [171, 301, "2008-11-07 10:35:13"], [141, 301, "2008-11-08 10:35:13"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "statistics"}, {"id_": 13, "Question": "Which course has the highest number of student registrations?", "SQL": "SELECT course_name FROM Courses WHERE course_id = (SELECT course_id FROM Student_Course_Registrations GROUP BY course_id ORDER BY COUNT(DISTINCT student_id) DESC LIMIT 1);", "table_names": ["Courses", "Student_Course_Registrations"], "tables": [{"table_columns": ["course_id", "course_name", "course_description", "other_details"], "table_content": [["301", "statistics", "statistics", null], ["302", "English", "English", null], ["303", "French", "French", null], ["304", "database", "database", null], ["305", "data structure", "data structure", null], ["306", "Art history", "Art history", null]]}, {"table_columns": ["student_id", "course_id", "registration_date"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2008-10-04 10:35:13"], [121, 303, "2008-11-14 10:35:13"], [131, 303, "2008-11-05 10:35:13"], [141, 302, "2008-11-06 10:35:13"], [151, 305, "2008-11-07 10:35:13"], [161, 302, "2008-11-07 10:35:13"], [171, 301, "2008-11-07 10:35:13"], [141, 301, "2008-11-08 10:35:13"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "statistics"}, {"id_": 14, "Question": "What is the mobile number of the person whose candidate details indicate 'Alex'?", "SQL": "SELECT People.cell_mobile_number FROM People JOIN Candidates ON People.person_id = Candidates.candidate_id WHERE Candidates.candidate_details = 'Alex';", "table_names": ["People", "Candidates"], "tables": [{"table_columns": ["person_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "login_name", "password"], "table_content": [[111, "Shannon", "Elissa", "Senger", "01955267735", "javier.trantow@example.net", "pgub", "5e4ff49a61b3544da3ad7dc7e2cf28847564c64c"], [121, "Virginie", "Jasmin", "Hartmann", "(508)319-2970x043", "boyer.lonie@example.com", "bkkv", "b063331ea8116befaa7b84c59c6a22200f5f8caa"], [131, "Dariana", "Hayley", "Bednar", "(262)347-9364x516", "leila14@example.net", "zops", "b20b6a9f24aadeda70d54e410c3219f61fb063fb"], [141, "Verna", "Arielle", "Grant", "1-372-548-7538x314", "adele.gibson@example.net", "uuol", "7be9c03d5467d563555c51ebb3eb78e7f90832ec"], [151, "Hoyt", "Mercedes", "Wintheiser", "1-603-110-0647", "stanley.monahan@example.org", "bnto", "c55795df86182959094b83e27900f7cf44ced570"], [161, "Mayra", "Haley", "Hartmann", "724-681-4161x51632", "terry.kuhlman@example.org", "rzxu", "ecae473cb54601e01457078ac0cdf4a1ced837bb"], [171, "Lizeth", "Bell", "Bartoletti", "812.228.0645x91481", "celestine11@example.net", "mkou", "76a93d1d3b7becc932d203beac61d064bd54e947"], [181, "Nova", "Amiya", "Feest", "766-272-9964", "oreynolds@example.com", "qrwl", "7dce9b688636ee212294c257dd2f6b85c7f65f2e"]]}, {"table_columns": ["candidate_id", "candidate_details"], "table_content": [[111, "Jane"], [121, "Robert"], [131, "Alex"], [141, "Tao"], [151, "Jack"], [161, "Leo"], [171, "Robin"], [181, "Cindy"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "(262)347-9364x516"}, {"id_": 15, "Question": "What is the email address of the person whose corresponding candidate detail is 'Leo'?", "SQL": "SELECT email_address FROM People p JOIN Candidates c ON p.person_id = c.candidate_id WHERE c.candidate_details = 'Leo';", "table_names": ["People", "Candidates"], "tables": [{"table_columns": ["person_id", "first_name", "middle_name", "last_name", "cell_mobile_number", "email_address", "login_name", "password"], "table_content": [[111, "Shannon", "Elissa", "Senger", "01955267735", "javier.trantow@example.net", "pgub", "5e4ff49a61b3544da3ad7dc7e2cf28847564c64c"], [121, "Virginie", "Jasmin", "Hartmann", "(508)319-2970x043", "boyer.lonie@example.com", "bkkv", "b063331ea8116befaa7b84c59c6a22200f5f8caa"], [131, "Dariana", "Hayley", "Bednar", "(262)347-9364x516", "leila14@example.net", "zops", "b20b6a9f24aadeda70d54e410c3219f61fb063fb"], [141, "Verna", "Arielle", "Grant", "1-372-548-7538x314", "adele.gibson@example.net", "uuol", "7be9c03d5467d563555c51ebb3eb78e7f90832ec"], [151, "Hoyt", "Mercedes", "Wintheiser", "1-603-110-0647", "stanley.monahan@example.org", "bnto", "c55795df86182959094b83e27900f7cf44ced570"], [161, "Mayra", "Haley", "Hartmann", "724-681-4161x51632", "terry.kuhlman@example.org", "rzxu", "ecae473cb54601e01457078ac0cdf4a1ced837bb"], [171, "Lizeth", "Bell", "Bartoletti", "812.228.0645x91481", "celestine11@example.net", "mkou", "76a93d1d3b7becc932d203beac61d064bd54e947"], [181, "Nova", "Amiya", "Feest", "766-272-9964", "oreynolds@example.com", "qrwl", "7dce9b688636ee212294c257dd2f6b85c7f65f2e"]]}, {"table_columns": ["candidate_id", "candidate_details"], "table_content": [[111, "Jane"], [121, "Robert"], [131, "Alex"], [141, "Tao"], [151, "Jack"], [161, "Leo"], [171, "Robin"], [181, "Cindy"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "terry.kuhlman@example.org"}, {"id_": 16, "Question": "Which students attended the course with ID 301 after January 1, 2010?", "SQL": "SELECT student_details FROM Students WHERE student_id IN (SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301 AND date_of_attendance > '2010-01-01')", "table_names": ["Students", "Student_Course_Attendance"], "tables": [{"table_columns": ["student_id", "student_details"], "table_content": [[111, "Marry"], [121, "Martin"], [131, "Barry"], [141, "Nikhil"], [151, "John"], [161, "Sarah"], [171, "Joe"], [181, "Nancy"]]}, {"table_columns": ["student_id", "course_id", "date_of_attendance"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2012-04-09 11:44:34"], [121, 303, "2014-04-09 11:44:34"], [141, 302, "2013-04-09 11:44:34"], [171, 301, "2015-04-09 11:44:34"], [161, 302, "2014-01-09 11:44:34"], [151, 305, "2012-05-09 11:44:34"], [141, 301, "2012-09-09 11:44:34"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "Martin, Joe, Nikhil"}, {"id_": 17, "Question": "List the names of students who attended course 301 but did not attend course 302.", "SQL": "SELECT student_details FROM Students WHERE student_id IN (SELECT student_id FROM Student_Course_Attendance WHERE course_id = 301) AND student_id NOT IN (SELECT student_id FROM Student_Course_Attendance WHERE course_id = 302);", "table_names": ["Students", "Student_Course_Attendance"], "tables": [{"table_columns": ["student_id", "student_details"], "table_content": [[111, "Marry"], [121, "Martin"], [131, "Barry"], [141, "Nikhil"], [151, "John"], [161, "Sarah"], [171, "Joe"], [181, "Nancy"]]}, {"table_columns": ["student_id", "course_id", "date_of_attendance"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2012-04-09 11:44:34"], [121, 303, "2014-04-09 11:44:34"], [141, 302, "2013-04-09 11:44:34"], [171, 301, "2015-04-09 11:44:34"], [161, 302, "2014-01-09 11:44:34"], [151, 305, "2012-05-09 11:44:34"], [141, 301, "2012-09-09 11:44:34"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "Marry, Martin, Joe"}, {"id_": 18, "Question": "What are the names of the courses that have at least three different students registered?", "SQL": "SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Course_Registrations GROUP BY course_id HAVING COUNT(DISTINCT student_id) >= 3);", "table_names": ["Courses", "Student_Course_Registrations"], "tables": [{"table_columns": ["course_id", "course_name", "course_description", "other_details"], "table_content": [["301", "statistics", "statistics", null], ["302", "English", "English", null], ["303", "French", "French", null], ["304", "database", "database", null], ["305", "data structure", "data structure", null], ["306", "Art history", "Art history", null]]}, {"table_columns": ["student_id", "course_id", "registration_date"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2008-10-04 10:35:13"], [121, 303, "2008-11-14 10:35:13"], [131, 303, "2008-11-05 10:35:13"], [141, 302, "2008-11-06 10:35:13"], [151, 305, "2008-11-07 10:35:13"], [161, 302, "2008-11-07 10:35:13"], [171, 301, "2008-11-07 10:35:13"], [141, 301, "2008-11-08 10:35:13"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "statistics"}, {"id_": 19, "Question": "Which student has registered for both courses 301 and 302?", "SQL": "SELECT student_details FROM Students WHERE student_id IN (SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301) AND student_id IN (SELECT student_id FROM Student_Course_Registrations WHERE course_id = 302);", "table_names": ["Students", "Student_Course_Registrations"], "tables": [{"table_columns": ["student_id", "student_details"], "table_content": [[111, "Marry"], [121, "Martin"], [131, "Barry"], [141, "Nikhil"], [151, "John"], [161, "Sarah"], [171, "Joe"], [181, "Nancy"]]}, {"table_columns": ["student_id", "course_id", "registration_date"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2008-10-04 10:35:13"], [121, 303, "2008-11-14 10:35:13"], [131, 303, "2008-11-05 10:35:13"], [141, 302, "2008-11-06 10:35:13"], [151, 305, "2008-11-07 10:35:13"], [161, 302, "2008-11-07 10:35:13"], [171, 301, "2008-11-07 10:35:13"], [141, 301, "2008-11-08 10:35:13"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "Nikhil"}, {"id_": 20, "Question": "Which student has registered for both courses with course_id '301' and '303'?", "SQL": "SELECT student_details FROM Students WHERE student_id IN (SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 AND student_id IN (SELECT student_id FROM Student_Course_Registrations WHERE course_id = 303));", "table_names": ["Students", "Student_Course_Registrations"], "tables": [{"table_columns": ["student_id", "student_details"], "table_content": [[111, "Marry"], [121, "Martin"], [131, "Barry"], [141, "Nikhil"], [151, "John"], [161, "Sarah"], [171, "Joe"], [181, "Nancy"]]}, {"table_columns": ["student_id", "course_id", "registration_date"], "table_content": [[111, 301, "2008-11-04 10:35:13"], [121, 301, "2008-10-04 10:35:13"], [121, 303, "2008-11-14 10:35:13"], [131, 303, "2008-11-05 10:35:13"], [141, 302, "2008-11-06 10:35:13"], [151, 305, "2008-11-07 10:35:13"], [161, 302, "2008-11-07 10:35:13"], [171, 301, "2008-11-07 10:35:13"], [141, 301, "2008-11-08 10:35:13"]]}], "foreign_keys": ["student id", "address id", "person id", "course id", "student id", "student id", "course id", "candidate id", "candidate id"], "primary_keys": ["address id", "person id", "student id", "course id", "person address id", "student id", "student id", "candidate id", "candidate id"], "answer": "Martin"}]